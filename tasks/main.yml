# vim: ts=2 sw=2 et :
---
- name: "include variable overrides"
  include_vars: "{{ item }}"
  with_first_found:
    - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "vars/{{ ansible_distribution }}.yml"
    - "vars/{{ ansible_os_family }}.yml"
  tags:
    - rbenv

- name: install rbenv sources
  become: no
  git:
    repo: "{{ rbenv.repo }}"
    dest: "{{ rbenv.path }}"
    version: "{{ rbenv.version }}"
  tags:
    - rbenv

- name: create configuration files
  become: no
  template:
    dest: "{{ _rbenv.conf }}"
    src: "{{ _rbenv.conf }}"
    force: no
  when: rbenv_conf_file is defined
  tags:
    - "rbenv"

- name: configure rbenv path
  become: no
  lineinfile:
    dest: "{{ _rbenv.conf }}"
    line: '[[ -d {{ rbenv.bin }} ]] && export PATH="{{ rbenv.bin }}:$PATH"'
  tags:
    - "rbenv"

- name: rbenv init
  become: no
  lineinfile:
    dest: "{{ rbenv.conf }}"
    line: "[[ -f {{ rbenv.bin }}/rbenv ]] && eval \"$({{ rbenv.bin }}/rbenv init -)\""
  tags:
    - "rbenv"

- name: rbenv plugin directory
  become: no
  file:
    dest: "{{ _rbenv.path.plugins }}"
    state: directory
  tags:
    - "rbenv"

- name: rbenv plugins
  become: no
  git:
    repo: "{{ item['repo'] }}"
    dest: "{{ _rbenv.path.plugins }}/{{ item['name'] }}"
    version: "{{ item['version'] | default('master') }}"
  with_items:
    - "{{ rbenv.plugins }}"
  tags:
    - "rbenv"

- name: Set up default gems
  template:
    dest: "{{ _rbenv.path }}/default-gems"
    src: "{{ _rbenv.conf }}"
  vars:
    gems: "{{ rbenv.gems }}"
  tags:
    - "rbenv"

- name: rbenv install ruby version
  become: no
  shell: "{{ rbenv.bin }}/rbenv install {{ rbenv.version }}"
  args:
    creates: "{{ rbenv.path }}/versions/{{ rbenv.version }}"
  tags:
    - "rbenv"
