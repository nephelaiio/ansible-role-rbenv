---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true

- name: install dependencies
  package:
    name: "{{ item }}"
    state: present
  become: yes
  with_items: "{{ rbenv_packages }}"

- name: install sources
  git:
    repo: "{{ rbenv_repo }}"
    dest: "{{ rbenv_path }}"
    version: "{{ rbenv_version }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: configure bash profile
  template:
    dest: "{{ rbenv_conf }}"
    src: bash_profile.j2
    force: 'no'
    owner: "{{ rbenv_user }}"
  vars:
    bin: "{{ rbenv_path_bin }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: configure bash path
  lineinfile:
    dest: "{{ rbenv_conf }}"
    line: '[[ -d {{ rbenv_path_bin }} ]] && export PATH="{{ rbenv_path_bin }}:$PATH"'
    owner: "{{ rbenv_user }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: configure shims
  lineinfile:
    dest: "{{ rbenv_conf }}"
    line: "[[ -f {{ rbenv_path_bin }}/rbenv ]] && eval \"$({{ rbenv_path_bin }}/rbenv init -)\""
    owner: "{{ rbenv_user }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: create plugin dir
  file:
    dest: "{{ rbenv_path_plugins }}"
    state: directory
    owner: "{{ rbenv_user }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: install plugins
  git:
    repo: "{{ item['repo'] }}"
    dest: "{{ rbenv_path_plugins }}/{{ item['name'] }}"
    version: "{{ item['version'] | default('master') }}"
  with_items:
    - "{{ rbenv_plugins }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: set up default gems
  template:
    dest: "{{ rbenv_path }}/default-gems"
    src: list.j2
    owner: "{{ rbenv_user }}"
  vars:
    items: "{{ rbenv_gems }}"
  become: yes
  become_user: "{{ rbenv_user }}"

- name: install ruby version
  shell: "{{ rbenv_path_bin }}/rbenv install {{ rbenv_ruby }}"
  when:
    rbenv_ruby is defined and rbenv_ruby != ''
  args:
    creates: "{{ rbenv_path }}/versions/{{ rbenv_ruby }}"
  become: yes
  become_user: "{{ rbenv_user }}"
  tags:
    - skip_ansible_lint

- name: link ruby home
  file:
    src: "{{ rbenv_path }}/versions/{{ rbenv_ruby }}"
    dest: "{{ rbenv_ruby_path }}"
    state: link
    owner: "{{ rbenv_user }}"
  become: yes
  when: rbenv_ruby_path != ''
